apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Chart.Name }}
  labels:
    name: {{ .Chart.Name }}
  annotations:
    prometheus.io/path: "/actuator/prometheus"
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        name: {{ .Chart.Name }}
        app: {{ .Chart.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default "latest" }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/bin/sh", "-c"]
        args:
          - >-
            . /home/athena/athena.env && java -Dcom.sun.management.jmxremote.port=6001
            -Dspring.profiles.active=eks -Dcom.sun.management.jmxremote=true
            -Dcom.sun.management.jmxremote.authenticate=false
            -Dcom.sun.management.jmxremote.ssl=false
            -Dcom.sun.management.jmxremote.rmi.port=6001 -jar -XX:+UseG1GC -Xms256m
            -Xmx1536m /home/athena/app.jar
            --spring.datasource.url=jdbc:postgresql://${DB_HOST}:5432/Athena
            --karros.athenagateway=${KARROS_GATEWAY}
            --karros.keycloak.clientid=${KEYCLOAK_BACKEND_ID}
            --karros.keycloak.clientsecret=${KEYCLOAK_SECRET}
            --karros.keycloak.url=https://${KEYCLOAK_DOMAIN}/auth/realms/Edulog/protocol/openid-connect/token
            --karros.keycloak.logouturl=https://${KEYCLOAK_DOMAIN}/auth/realms/Edulog/protocol/openid-connect/logout
            --karros.keycloak.forgotpasswordurl=https://${KEYCLOAK_DOMAIN}/auth/realms/Edulog/karros-auth/forgot-password
            --athena.tenant.id=${TENANT_ID}
            --spring.data.mongodb.host=${CACHE_HOST}
        ports:
        - containerPort: {{.Values.service.port}}
        volumeMounts:
        - mountPath: /home/athena/athena.env
          name: athenaenv
          subPath: athena.env
        resources:
          requests:
            cpu: 200m
            memory: "1024Mi"
          limits:
            cpu: 500m
            memory: "2048Mi"
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: {{.Values.service.port}}
            scheme: HTTP
          initialDelaySeconds: 10
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: {{.Values.service.port}}
            scheme: HTTP
          initialDelaySeconds: 300
          periodSeconds: 60
      volumes:
        - name: athenaenv
          configMap:
            defaultMode: 420
            name: release
      restartPolicy: Always
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}