apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Chart.Name }}
  labels:
    name: {{ .Chart.Name }}
  annotations:
    prometheus.io/path: "/actuator/prometheus"
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        name: {{ .Chart.Name }}
        app: {{ .Chart.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - . /home/athena/athena.env;java -Dcom.sun.management.jmxremote.port=9091 -Dspring.profiles.active=eks -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9091 -Dmanagement.endpoints.web.exposure.include=* -Dtenant.id=${TENANT_ID} -Dtenant.name=${TENANT} -Dserver.port=9091 -Dspring.kafka.consumer.bootstrap-servers=${ATHENA_KAFKA_CONSUMERS} -Dkafka.consume-from.tenant-change.topic=tenantSettings-p01usw1prod -Dspring.datasource.url=jdbc:postgresql://${DB_HOST}:5432/Athena -Dspring.datasource.username=${DB_USER} -Dspring.datasource.password=${DB_PASS} -jar -XX:+UseG1GC -Xms256m -Xmx1024m /home/athena/app.jar
          ports:
            - name: http
              containerPort: {{.Values.service.port}}
              protocol: TCP
          # env:
          #   - name: 
          #     value: 
          volumeMounts:
          - mountPath: /home/athena/athena.env
            name: athenaenv
            subPath: athena.env
          resources:
            requests:
              cpu: 200m
              memory: "1024Mi"
            limits:
              cpu: 500m
              memory: "2048Mi"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: {{.Values.service.port}}
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: {{.Values.service.port}}
      volumes:
        - name: athenaenv
          configMap:
            defaultMode: 420
            name: release
      restartPolicy: Always
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
