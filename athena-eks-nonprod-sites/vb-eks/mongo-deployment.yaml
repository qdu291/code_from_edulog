apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    svc: mongo
spec:
  selector:
    app: mongo
  ports:
  - protocol: TCP
    port: 27017
    name: http

# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: mongo-data-vb-eks
# spec:
#   capacity:
#     storage: 5Gi
#   volumeMode: Filesystem
#   accessModes:
#     - ReadWriteOnce
#   persistentVolumeReclaimPolicy: Retain
#   storageClassName: efs-sc
#   csi:
#     driver: efs.csi.aws.com
#     volumeHandle: fs-08da9fd022e8d61bd
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-data-claim
spec:
  resources:
    requests:
      storage: 5Gi
  storageClassName: efs-sc
  accessModes:
    - ReadWriteMany
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  labels:
    name: mongo
    scheduling: vn
  annotations:
    prometheus.io/path: "/actuator/prometheus"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mongo
    spec:
      nodeSelector:
        nodeType: scheduling-vn
      tolerations:
      - effect: NoSchedule
        operator: Equal
        key: scheduling
        value: vn
      containers:
      - name: mongo
        image: mongo
        imagePullPolicy: "Always"
        env:
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        args: ["--dbpath","/data/db"]
        command:
            - mongod
            - "--bind_ip"
            - "0.0.0.0"
        volumeMounts:
          - name: mongo-data
            mountPath: /data/db
        resources:
          requests:
            cpu: 50m
            memory: 256Mi
          limits:
            cpu: 100m
            memory: 512Mi
        ports:
            - containerPort: 27017
      volumes:
      - name: mongo-data
        persistentVolumeClaim:
          claimName: mongo-data-claim
# ---
# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   name: mongo
# spec:
#   selector:
#     matchLabels:
#       app: mongo
#   serviceName: mongo
#   replicas: 1
#   template:
#     metadata:
#       labels:
#         app: mongo
#     spec:
#       terminationGracePeriodSeconds: 10
# #      nodeSelector:
# #        kops.k8s.io/instancegroup: nodes-spot
#       # nodeSelector:
#       #   nodeType: scheduling-vn
#       # tolerations:
#       # - effect: NoSchedule
#       #   operator: Equal
#       #   key: scheduling
#       #   value: vn
#       containers:
#         - name: mongo
#           image: mongo
#           ports:
#             - containerPort: 27017
#           volumeMounts:
#             - name: mongo-persistent-storage
#               mountPath: /data/db
#   volumeClaimTemplates:
#   - metadata:
#       name: mongo-persistent-storage
#       annotations:
#         volume.beta.kubernetes.io/storage-class: "efs-sc"
#     spec:
#       accessModes: [ "ReadWriteOnce" ]
#       resources:
#         requests:
#           storage: 5Gi
