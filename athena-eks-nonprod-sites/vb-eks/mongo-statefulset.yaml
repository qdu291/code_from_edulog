# apiVersion: v1
# kind: Service
# metadata:
#   name: mongo
#   labels:
#     svc: mongo
# spec:
#   selector:
#     app: mongo
#   ports:
#   - protocol: TCP
#     port: 27017
#     name: http
# # ---
# # apiVersion: v1
# # kind: PersistentVolume
# # metadata:
# #   name: mongo-data-vb-eks
# # spec:
# #   capacity:
# #     storage: 5Gi
# #   volumeMode: Filesystem
# #   accessModes:
# #     - ReadWriteOnce
# #   persistentVolumeReclaimPolicy: Retain
# #   storageClassName: efs-sc
# #   csi:
# #     driver: efs.csi.aws.com
# #     volumeHandle: fs-08da9fd022e8d61bd:/mongo-vb-eks
# # ---
# # apiVersion: v1
# # kind: PersistentVolumeClaim
# # metadata:
# #   name: mongo-data-claim
# # spec:
# #   resources:
# #     requests:
# #       storage: 5Gi
# #   storageClassName: efs-sc
# #   accessModes:
# #     - ReadWriteMany
# ---
# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   name: mongo
# spec:
#   selector:
#     matchLabels:
#       app: mongo
#   serviceName: mongo
#   replicas: 1
#   template:
#     metadata:
#       labels:
#         app: mongo
#     spec:
#       terminationGracePeriodSeconds: 10
# #      nodeSelector:
# #        kops.k8s.io/instancegroup: nodes-spot
#       nodeSelector:
#         nodeType: scheduling-vn
#       tolerations:
#       - effect: NoSchedule
#         operator: Equal
#         key: scheduling
#         value: vn
#       containers:
#         - name: mongo
#           image: mongo
#           ports:
#             - containerPort: 27017
#           volumeMounts:
#             - name: mongo-persistent-storage
#               mountPath: /data/db
#   volumeClaimTemplates:
#   - metadata:
#       name: mongo-persistent-storage
#       annotations:
#         volume.beta.kubernetes.io/storage-class: "gp2"
#     spec:
#       accessModes: [ "ReadWriteMany" ]
#       resources:
#         requests:
#           storage: 5Gi
