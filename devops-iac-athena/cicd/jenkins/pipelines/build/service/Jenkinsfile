// JobName: devops/pipelines/single-service-build
pipeline {
  agent any

  environment {
    GIT_REPO_PREFIX = 'git@github.com:eduloginc'
    GIT_CREDS = 'eduloginc-git-tankhuu'
    ARTIFACT_PATH = 's3://edulog-athena-artifacts/build/service'
  }

  parameters {
    choice(name: 'service_name', choices: ['Gateway', 'GeocodeService', 'IVIN', 'Overlay', 'EDTA', 'AggregateService'])
    choice(name: 'type', choices: ['branch', 'tag'], description: 'Git Type of checkout. Ex. branch/tag')
    string(name: 'specifier', defaultValue: 'dev', description: 'Git Branch/Tag specifier to checkout code.')
  }

  stages{
    stage("Get GitHub Repo URL") {
      steps {
        script {
          env.GIT_REPO = "${GIT_REPO_PREFIX}/Athena-${service_name}.git"
        }
      }
    }
    stage("Get Branch Specifier") {
      when { equals expected: 'branch', actual: params.type }
      steps {
        script {
          env.GIT_SPEC = "refs/heads"
        }
      }
    }
    stage("Get Tag Specifier") {
      when { equals expected: 'tag', actual: params.type }
      steps {
        script { 
          env.GIT_SPEC = "refs/tags"
        }
      }
    }
    stage("Checkout") {
      steps {
        echo "=> Checkout from specifier: ${env.GIT_SPEC}/${params.specifier}"
        script {
          def scmVars = checkout([
            $class: 'GitSCM', 
            branches: [[name: "${env.GIT_SPEC}/${params.specifier}"]],
            userRemoteConfigs: [[
              url: "${GIT_REPO}", 
              credentialsId: "${GIT_CREDS}"
              ]]
          ])
          // Set env GIT_COMMIT & SHORT_COMMIT & BUILD_VERSION
          env.GIT_COMMIT = scmVars.GIT_COMMIT
          env.SHORT_COMMIT = scmVars.GIT_COMMIT.substring(0,7)
        }
      }
    }
    stage("Build") {
      steps {
        sh 'mvn clean install'
      }
    }
    stage("Artifacts") {
      steps {
        echo "==> Create Artifact"
        script {
          package_name = "${params.specifier}"
          if (params.type == 'branch') {
            package_name = "${params.specifier}-${SHORT_COMMIT}"
          }
          env.ARTIFACT_FOLDER = package_name.replaceAll('/', "-")
        }
        echo "==> Upload ${params.service_name} to S3"
        sh "aws s3 cp target/*.jar ${ARTIFACT_PATH}/${service_name}/${ARTIFACT_FOLDER}/${service_name}.jar"
      }
    }
  }
  post{
    always {
      echo "========always========"
      cleanWs()
    }
    success {
      echo "========pipeline executed successfully ========"
    }
    failure {
      echo "========pipeline execution failed========"
    }
  }
}