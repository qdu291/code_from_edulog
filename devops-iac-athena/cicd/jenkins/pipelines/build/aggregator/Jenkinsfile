// JobName: aggregator-build
pipeline {
  agent any

  environment {
    GIT_REPO = 'git@github.com:eduloginc/Athena.git'
    GIT_CREDS = 'eduloginc-git-tankhuu'
    ARTIFACT_PATH = 's3://edulog-athena-artifacts/build/aggregator'
  }

  parameters {
    choice(name: 'type', choices: ['branch', 'tag'], description: 'Git Type of checkout. Ex. branch/tag')
    string(name: 'specifier', defaultValue: 'dev', description: 'Git Branch/Tag specifier to checkout code.')
  }

  stages{
    stage("Get Branch Specifier") {
      when { equals expected: 'branch', actual: params.type }
      steps {
        script {
          env.GIT_SPEC = "refs/heads"
        }
      }
    }
    stage("Get Tag Specifier") {
      when { equals expected: 'tag', actual: params.type }
      steps {
        script { 
          env.GIT_SPEC = "refs/tags"
        }
      }
    }
    stage("Checkout") {
      steps {
        echo "=> Checkout from specifier: ${env.GIT_SPEC}/${params.specifier}"
        script {
          def scmVars = checkout([
            $class: 'GitSCM', 
            branches: [[name: "${env.GIT_SPEC}/${params.specifier}"]],
            userRemoteConfigs: [[
              url: "${GIT_REPO}", 
              credentialsId: "${GIT_CREDS}"
              ]]
          ])
          // Set env GIT_COMMIT & SHORT_COMMIT & BUILD_VERSION
          env.GIT_COMMIT = scmVars.GIT_COMMIT
          env.SHORT_COMMIT = scmVars.GIT_COMMIT.substring(0,7)
        }
      }
    }
    stage("Build") {
      steps {
        echo "Build by Aggregator"
        dir('Source/BuildAggregator') {
          sh 'mvn clean install -DskipTests'
        }
      }
    }
    stage("Artifacts") {
      steps {
        echo "=> Create Package Folder"
        script {
          package_name = "${params.specifier}"
          if (params.type == 'branch') {
            package_name = "${params.specifier}-${SHORT_COMMIT}"
          }
          env.ARTIFACT_FOLDER = package_name.replaceAll('/', "-")
        }
        echo "=> Package Artifacts"
        dir("${JENKINS_HOME}/.m2/repository/com/edulog") {
          sh '''#!/bin/bash -xe
              BUILD_DIR=/tmp/${ARTIFACT_FOLDER}
              mkdir -p /tmp/${ARTIFACT_FOLDER}
              cp -p RoutingServer/0.1.0/RoutingServer-0.1.0.jar $BUILD_DIR/RoutingServer.jar
              cp -p ReportsServer/0.1.0/ReportsServer-0.1.0.jar $BUILD_DIR/ReportsServer.jar
              cp -p TransactionHUBV2/2.1.0/TransactionHUBV2-2.1.0.jar $BUILD_DIR/TransactionHUBV2.jar
              cp -p RoutingMigration/1.0/RoutingMigration-1.0.jar $BUILD_DIR/RoutingMigration.jar
              cp -p PlannedRollover/2.1.0/PlannedRollover-2.1.0.jar $BUILD_DIR/PlannedRollover.jar
            '''
        }
        sh '''#!/bin/bash -xe
          cd /tmp/
          tar zcvf package.tar.gz ${ARTIFACT_FOLDER}
          aws s3 cp package.tar.gz ${ARTIFACT_PATH}/${ARTIFACT_FOLDER}/"
        '''
      }
    }
  }
  post{
    always {
      echo "========always========"
      cleanWs()
      // dir('/tmp') {
      //   sh 'rm -rf ${ARTIFACT_FOLDER}'
      //   sh 'rm -f package.tar.gz'
      // }
    }
    success {
      echo "========pipeline executed successfully ========"
    }
    failure {
      echo "========pipeline execution failed========"
    }
  }
}