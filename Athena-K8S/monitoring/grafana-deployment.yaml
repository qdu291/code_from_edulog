apiVersion: v1
kind: Secret
metadata:
  name: grafana
  namespace: monitoring
type: Opaque
data:
  ktvn_pw: a3R2bkBrYXJybyRUM2No
---
# Source: istio/charts/grafana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
    chart: grafana
    heritage: Tiller
    release: istio
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    dns.alpha.kubernetes.io/external: grafana.athena-nonprod.com
spec:
  type: LoadBalancer
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: grafana
---
# Source: istio/charts/grafana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
    chart: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        chart: grafana
      annotations:
        prometheus.io/scrape: "true"
        iam.amazonaws.com/role: "amp-iamproxy-query-role"
    spec:
      securityContext:
        runAsUser: 0
      containers:
        - name: grafana
          image: "grafana/grafana:latest"
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 3000
          readinessProbe:
            httpGet:
              path: /login
              port: 3000
          env:
          - name: GF_RENDERING_SERVER_URL
            value: "http://grafana-render:8081/render"
          - name: GF_RENDERING_CALLBACK_URL
            value: "http://grafana:3000/"
          - name: GF_INSTALL_PLUGINS
            value: "grafana-piechart-panel"
          - name: GRAFANA_PORT
            value: "3000"
          - name: GF_AUTH_BASIC_ENABLED
            value: "false"
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ORG_ROLE
            value: Admin
          - name: GF_PATHS_DATA
            value: /data/grafana
          - name: KTVN_PW
            valueFrom:
              secretKeyRef:
                name: grafana
                key: ktvn_pw
          resources:
            requests:
              cpu: 10m

          volumeMounts:
          - name: data
            mountPath: /data/grafana
          - name: grafana-config
            mountPath: "/etc/grafana/grafana.ini"
            subPath: grafana.ini
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - ppc64le
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: grafana
      - name: grafana-config
        configMap:
          name:  grafana-config
      nodeSelector:
        eks.amazonaws.com/nodegroup: system_nodes
---
