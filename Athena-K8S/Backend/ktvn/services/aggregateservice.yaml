apiVersion: v1
kind: Service
metadata:
  namespace: ktvn
  name: aggregateservice
  labels:
    svc: aggregateservice
spec:
  selector:
    app: aggregateservice
  ports:
  - protocol: TCP
    port: 8085
    name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ktvn
  name: aggregateservice

  labels:
    name: aggregateservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aggregateservice
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: aggregateservice
        app: aggregateservice
    spec:
      containers:
      - image: 696952606624.dkr.ecr.us-east-2.amazonaws.com/athena/aggregateservice:d3fad5fa3b51be2cc425b0868d949edc69e8125b
        name: aggregateservice
        command: ["/bin/sh", "-c"]
        args: 
          - . /home/athena/athena.env;java -Dspring.profiles.active=eks -Dspring.kafka.consumer.topics=stage-athena-run-changes,stage-athena-route-changes -Dspring.kafka.consumer.group-id=${CLIENT_ID}-aggregator -Dspring.kafka.consumer.concurrency=12 -Dspring.kafka.consumer.bootstrap-servers=b-1.athenamsk.eg7z0i.c3.kafka.us-east-2.amazonaws.com:9092 -Dspring.kafka.producer.bootstrap-servers=b-1.athenamsk.eg7z0i.c3.kafka.us-east-2.amazonaws.com:9092 -Dtenant.id=${TENANT_ID} -Dapp.name=aggregator_run -Dtenant.name=${CLIENT_ID} -jar -XX:+UseG1GC -Xms256m -Xmx1024m  /home/athena/app.jar
        ports:
        - containerPort: 8085
        volumeMounts:
        - mountPath: /home/athena/athena.env
          name: athenaenv
          subPath: athena.env
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8085
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8085
            scheme: HTTP
          initialDelaySeconds: 300
          periodSeconds: 60
        lifecycle: # Needed for no-downtime deployments
            preStop:
              exec:
                command: ["/bin/sleep", "5"]
        imagePullPolicy: Always
      volumes:
        - name: athenaenv
          configMap:
            defaultMode: 420
            name: release
      restartPolicy: Always

---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: aggregateservice
  namespace: ktvn
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: aggregateservice
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Pods
    pods:
      metricName: jvm_threads_live_threads
      targetAverageValue: 2500
  - type: Pods
    pods:
      metricName: tomcat_threads_current_threads
      targetAverageValue: 50
