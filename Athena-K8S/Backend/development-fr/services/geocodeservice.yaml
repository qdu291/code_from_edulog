apiVersion: v1
kind: Service
metadata:
  namespace: development-fr
  name: geocodeservice
  labels:
    svc: geocodeservice
spec:
  selector:
    app: geocodeservice
  ports:
  - protocol: TCP
    port: 8095
    name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: development-fr
  name: geocodeservice

  labels:
    name: geocodeservice
  annotations:
    prometheus.io/path: "/actuator/prometheus"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: geocodeservice
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: geocodeservice
        app: geocodeservice
    spec:
      containers:
      - image: 696952606624.dkr.ecr.us-east-2.amazonaws.com/athena/geocode-service:dockerize-d8e63a2
        name: geocodeservice
        command: ["/bin/sh", "-c"]
        args: 
          - . /home/athena/athena.env;java -Dcom.sun.management.jmxremote.port=6001 -Dspring.profiles.active=eks -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=6001 -jar -XX:+UseG1GC -Xms256m -Xmx1536m /home/athena/app.jar --spring.datasource.url=jdbc:postgresql://${DB_HOST}:5432/Athena
        ports:
        - containerPort:  8095
          name: geocodeservice
        volumeMounts:
        - mountPath: /home/athena/athena.env
          name: athenaenv
          subPath: athena.env
        imagePullPolicy: Always
      volumes:
        - name: athenaenv
          configMap:
            defaultMode: 420
            name: release
      restartPolicy: Always