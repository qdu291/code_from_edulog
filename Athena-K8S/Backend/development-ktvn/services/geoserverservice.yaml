apiVersion: v1
kind: Service
metadata:
  namespace: development-ktvn
  name: geoserverservice
  labels:
    svc: geoserverservice
spec:
  type: NodePort
  selector:
    app: geoserverservice
  ports:
  - protocol: TCP
    port: 8070
    name: http
    targetPort: 8080
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   namespace: development-ktvn
#   name: geoserverservice

#   labels:
#     name: geoserverservice
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: geoserverservice
#   strategy:
#     rollingUpdate:
#       maxSurge: 1
#       maxUnavailable: 1
#     type: RollingUpdate
#   template:
#     metadata:
#       labels:
#         name: geoserverservice
#         app: geoserverservice
#     spec:
#       containers:
#       - image: 696952606624.dkr.ecr.us-east-2.amazonaws.com/athena/geoserver:latest
#         name: geoserverservice
#         # command: ["/bin/sh", "-c"]
#         # args: 
#         #   - . /home/athena/athena.env;java -Dspring.profiles.active=eks -Dspring.datasource.url=jdbc:postgresql://${DB_HOST}:5432/Athena -jar -XX:+UseG1GC -Xms256m -Xmx1024m  /home/athena/app.jar
#         ports:
#         - containerPort:  8070
#         volumeMounts:
#         - mountPath: /home/athena/athena.env
#           name: athenaenv
#           subPath: athena.env
#       volumes:
#         - name: athenaenv
#           configMap:
#             defaultMode: 420
#             name: release
#       restartPolicy: Always
#       # imagePullPolicy: Always
  
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: development-ktvn
  name: geoserverservice
spec:
  selector:
    matchLabels:
      app: geoserverservice
  serviceName: geoserverservice
  replicas: 1
  template:
    metadata:
      labels:
        app: geoserverservice
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: geoserverservice
          image: 696952606624.dkr.ecr.us-east-2.amazonaws.com/athena/geoserver:2.18.9
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: geoserverservice-persistent-storage
              mountPath: /_data
              subPath: _data
          imagePullPolicy: Always
  volumeClaimTemplates:
  - metadata:
      name: geoserverservice-persistent-storage
      annotations:
        volume.beta.kubernetes.io/storage-class: "gp2"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi