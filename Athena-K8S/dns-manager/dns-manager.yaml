kind: Deployment
apiVersion: apps/v1
metadata:
  name: dns-controller
  namespace: kube-system
  labels:
    k8s-addon: dns-controller.addons.k8s.io
    k8s-app: dns-controller
    version: v1.16.0
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: dns-controller
  template:
    metadata:
      labels:
        k8s-addon: dns-controller.addons.k8s.io
        k8s-app: dns-controller
        version: v1.16.0
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      containers:
        - name: dns-controller
          image: 'kope/dns-controller:1.16.0'
          command:
            - /usr/bin/dns-controller
            - '--watch-ingress=false'
            - '--dns=aws-route53'
            - '--zone=athena-nonprod.com'
            # - '--watch-ingress=true'
            # - '--zone=*/*'
            - '-v=2'
          resources:
            requests:
              cpu: 50m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: Default
      nodeSelector:
        eks.amazonaws.com/nodegroup: system_nodes
      serviceAccountName: dns-controller
      serviceAccount: dns-controller
      hostNetwork: true
      securityContext: {}
      schedulerName: default-scheduler
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      priorityClassName: system-cluster-critical
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
status:
  observedGeneration: 4
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
  conditions:
    - type: Progressing
      status: 'True'
      reason: NewReplicaSetAvailable
      message: ReplicaSet "dns-controller-576c5874ff" has successfully progressed.
    - type: Available
      status: 'True'
      reason: MinimumReplicasAvailable
      message: Deployment has minimum availability.
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: dns-controller
  namespace: kube-system
  labels:
    k8s-addon: dns-controller.addons.k8s.io
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: 'dns-controller'
  labels:
    k8s-addon: dns-controller.addons.k8s.io
subjects:
  - kind: User
    apiGroup: rbac.authorization.k8s.io
    name: 'system:serviceaccount:kube-system:dns-controller'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'dns-controller'
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: 'dns-controller'
  labels:
    k8s-addon: dns-controller.addons.k8s.io
rules:
  - verbs:
      - get
      - list
      - watch
    apiGroups:
      - ''
    resources:
      - endpoints
      - services
      - pods
      - ingress
      - nodes
  - verbs:
      - get
      - list
      - watch
    apiGroups:
      - extensions
    resources:
      - ingresses
