#!/usr/bin/env python3
import boto3
import sys
from botocore.config import Config
from fire import Fire

class ASG:
  def __init__(self, profile: str = 'default', region: str = 'us-east-2'):
    self.PROFILE = profile
    self.REGION = region
  
  def connect(self, service: str):
    config = Config(region_name=self.REGION)
    session = boto3.Session(profile_name=self.PROFILE)

    return session.client(service, config=config)

  def get_ssm(self, envtype: str, envname: str):
    aws_ssm = self.connect(service='ssm')
    try:
      resp = aws_ssm.get_parameter(
        Name='/edulog/athena/' + envtype + '/' + envname + '/be_asg',
        )
      # ssm = resp['Parameter']['Value']
      if resp and len(resp['Parameter']['Value']) > 0:
        be_asg = resp['Parameter']['Value']
        print(be_asg)
    except:
      print("")

  def get_instance_id(self, asgname: str):
    aws_asg = self.connect(service='autoscaling')
    try:
      asg_info = aws_asg.describe_auto_scaling_groups(
        AutoScalingGroupNames = [
          asgname,
        ],
        MaxRecords = 50
      )
      instances = asg_info['AutoScalingGroups'][0]['Instances']
      print(instances[0]['InstanceId'])

    except Exception as err:
      print(err)

if __name__ == "__main__":
  Fire(ASG)

