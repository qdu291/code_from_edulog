#apiVersion: v1
#kind: PersistentVolume
#metadata:
#  name: devops-2-pv
#spec:
#  capacity:
#    storage: 5Gi
#  volumeMode: Filesystem
#  accessModes:
#    - ReadWriteMany
#  persistentVolumeReclaimPolicy: Retain
#  storageClassName: efs-sc
#  csi:
#    driver: efs.csi.aws.com
#    volumeHandle: fs-08da9fd022e8d61bd
#---
#apiVersion: v1
#kind: PersistentVolume
#metadata:
#  name: devops-2-pv
#spec:
#  capacity:
#    storage: 5Gi
#  volumeMode: Filesystem
#  accessModes:
#    - ReadWriteMany
#  persistentVolumeReclaimPolicy: Retain
#  storageClassName: efs-sc
#  csi:
#    driver: efs.csi.aws.com
#    volumeHandle: fs-08da9fd022e8d61bd::fsap-0f157b6e2df3dd37f
#---
# EFS Volume Path
apiVersion: v1
kind: PersistentVolume
metadata:
  name: devops-2-pv
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: efs-sc
  csi:
    driver: efs.csi.aws.com
    volumeHandle: fs-08da9fd022e8d61bd:/devops-2

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: devops-2-pv-claim
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 5Gi
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: efs-app-sts
spec:
  selector:
    matchLabels:
      app: test-efs
  serviceName: efs-app
  replicas: 2
  template:
    metadata:
      labels:
        app: test-efs
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: linux
        image: amazonlinux:2 
        command: ["/bin/sh"]
        args: ["-c", "while true; do echo $(date -u) >> /efs-data/out.txt; sleep 5; done"]
        volumeMounts:
        - name: efs-storage
          mountPath: /data
      volumes:
      - name: efs-storage
        persistentVolumeClaim:
          claimName: devops-2-pv-claim